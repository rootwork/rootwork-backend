// Author, when it appears on a post

.author_header > img {
  border-radius: 100%;
}

// Author, when it appears on the home page

.home_bio {
  display: grid;
  grid-template-columns: 8rem 1fr;
  grid-gap: 1rem;
  margin: 1rem 0 2rem;

  .author_bio {
    line-height: 1.35;
  }

  h1 {
    position: relative;
    margin: 0 0 0.5rem;

    &::before {
      z-index: -1;
      position: absolute;
      bottom: 0;
      left: -5rem;
      display: block;
      content: '';
      width: 0;
      height: 2px;
      background-color: var(--theme);
      transition-timing-function: ease-in-out;
      @include motion(transition-delay, 500ms);
      @include motion(transition-duration, 750ms);

      @include darkmode {
        background-color: var(--light);
      }
    }
  }

  .button {
    margin-top: 0.2rem;
    padding: 0.1rem 0.5rem;
    font-weight: bold;
    border: 2px var(--bright-green) solid;

    @include is-on {
      border-width: 2px;
    }

    @include darkmode {
      border-color: var(--light);

      @include is-on {
        background-color: var(--light);
        color: var(--dark-green);
      }
    }
  }

  .img_wrap {
    position: relative;
    display: inline-block;
    margin: 0;
    padding: 0;
    overflow: visible;
    @include motion(transition-delay, 500ms);
    @include motion(transition-duration, 750ms);

    #blob {
      path {
        d: var(--path1);
        transition-timing-function: ease-in-out;
        @include motion(transition-duration, 750ms);
      }
    }

    img {
      --image-size: 128px;
      margin: calc(var(--image-top-pad) * -1) 0 0
        calc(var(--image-left-pad) * -1);
      padding: var(--image-top-pad) 0 0 var(--image-left-pad);
      max-width: var(--image-size);
      clip-path: url(#blob);
    }
  }

  @include is-on {
    .img_wrap {
      $width: var(--image-on-border);
      $width2: calc(var(--image-on-border) * 15);
      $widthNeg: calc(var(--image-on-border) * -1);

      $colorLt1: map-get($color, bright-green);
      $colorLt2: lighten(map-get($color, bright-green), 35%);
      $colorLt3: lighten(map-get($color, bright-green), 45%);
      $colorLt4: lighten(map-get($color, bright-green), 55%);

      $colorDk1: lighten(map-get($color, dark-green), 75%);
      $colorDk2: lighten(map-get($color, dark-green), 25%);
      $colorDk3: lighten(map-get($color, dark-green), 15%);
      $colorDk4: lighten(map-get($color, dark-green), 5%);

      @include switch(
        filter,
        // Light mode
        drop-shadow($width 0 0 $colorLt1)
        drop-shadow($widthNeg 0 0 $colorLt1)
        drop-shadow(0 $width 0 $colorLt1)
        drop-shadow(0 $widthNeg 0 $colorLt1)
        drop-shadow($width $width 0 $colorLt1)
        drop-shadow($widthNeg $widthNeg 0 $colorLt1)
        drop-shadow($width $widthNeg 0 $colorLt1)
        drop-shadow($widthNeg $width 0 $colorLt1)
        drop-shadow(0 $width2 0 $colorLt2)
        drop-shadow(0 $width2 0 $colorLt3)
        drop-shadow(0 $width2 0 $colorLt4),
        // Dark mode
        drop-shadow($width 0 0 $colorDk1)
        drop-shadow($widthNeg 0 0 $colorDk1)
        drop-shadow(0 $width 0 $colorDk1)
        drop-shadow(0 $widthNeg 0 $colorDk1)
        drop-shadow($width $width 0 $colorDk1)
        drop-shadow($widthNeg $widthNeg 0 $colorDk1)
        drop-shadow($width $widthNeg 0 $colorDk1)
        drop-shadow($widthNeg $width 0 $colorDk1)
        drop-shadow(0 $width2 0 $colorDk2)
        drop-shadow(0 $width2 0 $colorDk3)
        drop-shadow(0 $width2 0 $colorDk4)
      );
      @include motion(transition-delay, 350ms);
      @include motion(transition-duration, 1s);

      #blob {
        path {
          d: var(--path2);
        }
      }
    }

    h1::before {
      width: calc(100% + 5rem);
    }

    .button {
      @include switch(border-color, var(--theme), var(--light));
    }
  }
}
