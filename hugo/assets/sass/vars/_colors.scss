// Colors
//
// We define colors in a Sass map so that we can use Sass color functions on
// them if necessary. Then we assign those colors to corresponding CSS variables
// as well as assigning them to particular uses. Finally, we swap out the CSS
// vars versions when in dark mode.

@import '../base/darkmode';

// Basic colors

$color: (
  brown: #80311a,
  medium-brown: #80502c,
  dark-brown: #5e1b07,

  green: #04800e,
  bright-green: #00b877,
  dark-green: #002714,
  md-dark-green: #008053,
  medium-green: #3cc695,
  light-green: #4a0,
  pale-green: #cfffcf,

  yellow: yellow,
  blue: rgb(0, 187, 203),
  purple: rgb(171, 121, 214),
  pink: deepPink,

  white: #eee,
  hazy-white: #fafafa,
  pale-light: rgba(#eee, 0.15),
  light: rgba(#eee, 0.25),
  medium-light: rgba(#fff, 0.3),
  bright-light: rgba(#eee, 0.91),
  black: #111,
  slate: rgb(39, 39, 44),
  shade: rgba(#111, 0.25),
  dark-shade: rgba(#111, 0.8),
);

// Colors based on other colors

$derivedColor: (
  medium-green: lighten(map-get($color, bright-green), 3%),
  hazy-green: lighten(map-get($color, dark-green), 3%),
  translucent-green: rgba(map-get($color, bright-green), 0.15),
  translucent-brown: rgba(map-get($color, medium-brown), 0.1),
);

// Gradients

$gradients: (
  rainbow:
    linear-gradient(
      35deg,
      map-get($color, pink) 10%,
      map-get($color, yellow) 25%,
      map-get($color, bright-green) 50%,
      map-get($color, blue) 75%,
      map-get($color, purple) 90%
    ),
  green:
    linear-gradient(
      35deg,
      map-get($color, blue) 10%,
      map-get($color, bright-green) 25%,
      map-get($color, bright-green) 50%,
      map-get($color, purple) 95%
    ),
  greenblue:
    linear-gradient(
      120deg,
      map-get($color, blue) 10%,
      map-get($color, bright-green) 25%,
      map-get($color, purple) 95%
    ),
);

:root {
  // Define colors

  --brown: #{map-get($color, brown)};
  --medium-brown: #{map-get($color, medium-brown)};
  --dark-brown: #{map-get($color, dark-brown)};
  --translucent-brown: #{map-get($derivedColor, translucent-brown)};

  --green: #{map-get($color, green)};
  --bright-green: #{map-get($color, bright-green)};
  --medium-green: #{map-get($color, medium-green)};
  --md-dark-green: #{map-get($color, md-dark-green)};
  --dark-green: #{map-get($color, dark-green)};
  --hazy-green: #{map-get($derivedColor, hazy-green)};
  --medium-green: #{map-get($derivedColor, medium-green)};
  --light-green: #{map-get($color, light-green)};
  --pale-green: #{map-get($color, pale-green)};
  --translucent-green: #{map-get($derivedColor, translucent-green)};

  --yellow: #{map-get($color, yellow)};
  --blue: #{map-get($color, blue)};
  --purple: #{map-get($color, purple)};
  --pink: #{map-get($color, pink)};

  --white: #{map-get($color, white)};
  --hazy-white: #{map-get($color, hazy-white)};
  --pale-light: #{map-get($color, pale-light)};
  --light: #{map-get($color, light)};
  --medium-light: #{map-get($color, medium-light)};
  --bright-light: #{map-get($color, bright-light)};

  --black: #{map-get($color, black)};
  --shade: #{map-get($color, shade)};
  --dark-shade: #{map-get($color, dark-shade)};

  // Assign colors

  --bg: #{map-get($color, dark-green)};
  --theme: #{map-get($color, bright-green)};
  --dark-theme: #{map-get($color, dark-green)};
  --medium-theme: #{map-get($derivedColor, medium-green)};
  --light-theme: #{map-get($color, translucent-green)};
  --post-bg: #{map-get($color, hazy-white)};

  // Define gradients

  --g-rainbow: #{map-get($gradients, rainbow)};
  --g-green: #{map-get($gradients, green)};
  --g-greenblue: #{map-get($gradients, greenblue)};
}

// CSS vars that override values in the parent theme

html {
  --theme: var(--theme);
  --themedark: var(--theme-dark);
  --bg: var(--dark-green);
  --translucent-lighter: var(--translucent-white);
  --shade: var(--shade);
  --shadedark: var(--dark-shade);
  --post-bg: var(--post-bg);
  --choice-bg: var(--light);
}

// Sass vars that override values in the parent theme

$bg: map-get($color, dark-green);
$theme: map-get($color, bright-green);
$light: map-get($color, white);
$haze: map-get($color, hazy-white);

// Dark mode swaps

html[data-mode='dim'] {
  --light: var(--bright-light);
  --header-text: var(--white);
  --text: var(--white);
}
html {
  @media (prefers-color-scheme: dark) {
    --light: var(--bright-light);
    --header-text: var(--white);
    --text: var(--white);
  }
}
