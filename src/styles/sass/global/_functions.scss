//
// Functions
//

/// Calculate rem with fallback pixels.
///
/// @link http://www.stubbornella.org/content/2013/07/01/easy-peasy-rem-conversion-with-sass/
/// @author Fiona Chan
///
/// @param {font-size} $size - Font size in pixels
/// @group Utilities

@function calculateRem($size) {
  $remSize: $size / 16px;
  // Default font size on html element is 100%, equivalent to 16px.
  @return #{$remSize}rem;
}

/// Helper function for calling colors from a Sass map.
///
/// @link http://www.sitepoint.com/using-sass-maps/
/// @author Hugo Giraudel
///
/// @param {color} $key - Color name
/// @group Utilities

@function color($key) {
  @if map-has-key($colors, $key) {
    @return map-get($colors, $key);
  }

  @warn "Unknown `#{$key}` in $colors.";
  @return null;
}

/// Computes a top-shadow for a card effect.
///
/// @link https://css-tricks.com/snippets/sass/material-shadows-mixin/
/// @author Hugo Giraudel
///
/// @param {Number} $depth - depth level
/// @return {List}
///
/// @group Utilities
@function top-shadow($depth) {
  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
  $blur: nth(1.5 3 10 14 19, $depth) * 4px;
  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

  @return 0 $primary-offset $blur $color;
}

/// Computes a bottom-shadow for a card effect.
///
/// @link https://css-tricks.com/snippets/sass/material-shadows-mixin/
/// @author Hugo Giraudel
///
/// @param {Number} $depth - depth level
/// @return {List}
///
/// @group Utilities
@function bottom-shadow($depth) {
  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
  $blur: nth(1 3 3 5 6, $depth) * 4px;
  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

  @return 0 $primary-offset $blur $color;
}
