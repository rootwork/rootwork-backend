name: Prepare Hugo site
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true # Fetch Hugo themes
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod
      - name: Setup Node.js
        uses: actions/setup-node@v2
      - name: Install Node dependencies
        # The first line of `run` is designed to omit husky setup, since it's
        # not necessary or desireable in a remote build.
        run: |
          npm pkg set scripts.prepare=" "
          npm ci
      - name: Setup image library dependencies
        run: |
          sudo apt install -y build-essential
          libjpeg-dev libpng-dev libtiff-dev libgif-dev
      - name: Install WebP libraries
        run: |
          wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.2.2-linux-x86-64.tar.gz
          tar -zvxf libwebp-1.2.2-linux-x86-64.tar.gz
          cd libwebp-1.2.2-linux-x86-64
          sudo ./configure
          sudo make && sudo make install
      - name: Remove outdated ImageMagick and install newer version
        run: |
          sudo apt remove -y imagemagick
          wget https://www.imagemagick.org/download/ImageMagick.tar.gz
          mkdir imagemagick && tar xf ImageMagick.tar.gz -C imagemagick --strip-components 1
          cd imagemagick
          sudo ./configure --with-webp=yes
          sudo make && sudo make install
          sudo ldconfig /usr/local/lib
      - name: Install AVIF library
        run: npm install --location=global avif
      - name: Report versions
        run: |
          echo -e "\e[0;92m#### VERSIONS ####\e[0m"
          magick --version | grep "Version"
          cwebp -version
          npx avif --version
          echo -e "\e[0;92m#### ######## ####\e[0m"
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true
      - name: Build Hugo site
        # The script optimizes (and creates modern formats of) images.
        # `npm run p` builds the site, copying over the optimized images.
        # `git restore` then removes the optimized images from the repo, leaving
        # them only in the public site.
        run: |
          ./scripts/image_optimize.sh
          npm run p -- --baseUrl https://rootwork.github.io/rootwork.org/
          git restore hugo/content
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: hugo/public
